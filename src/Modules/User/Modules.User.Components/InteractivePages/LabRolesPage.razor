@page "/labs/user-lab/manage/roles"
@attribute [LabAuthorize(LabsPermissions.ConfigureSite)]

@code
{
	[Inject]
	public IServiceExecutor<IUIBus> ServiceExecutor { get; set; } = default!;

	private Result<PagedList<GetLabRolesResponse>> getRolesResult;
	
	private void OnLabRoleCreatedHandler((CreateLabRoleResponse createLabRoleResponse, CreateLabRole createLabRole) roleCreated)
	{
		getRolesResult.Entity.Items.Add(new GetLabRolesResponse
		{
			Id = roleCreated.createLabRoleResponse.LabRoleId,
			Name = roleCreated.createLabRole.Name,
			Description = roleCreated.createLabRole.Description,
			AutoAssign = roleCreated.createLabRole.AutoAssign
		});
	}

	private void OnLabRoleUpdatedHandler(UpdateLabRole editedRole)
	{
		var roleToEdit = getRolesResult.Entity.Items.First(x => x.Id == editedRole.Id);
		roleToEdit.Name = editedRole.Name;
		roleToEdit.Description = editedRole.Description;
	}

	private void OnRoleDeletedHandler(Guid roleId)
	{
		var roleToDelete = getRolesResult.Entity.Items.First(x => x.Id == roleId);
		getRolesResult.Entity.Items.Remove(roleToDelete);
	}

	private MudDataGrid<GetLabRolesResponse>? dataGrid;
	private GetLabRoles getRolesRequest = new();
	private string? searchString = null;
	private async Task<GridData<GetLabRolesResponse>> ServerReload(GridState<GetLabRolesResponse> state)
	{
		getRolesRequest = new()
		{
			PageNumber = state.Page + 1,
			PageSize = state.PageSize
		};

		getRolesResult = await ServiceExecutor.ExecuteAsync(nameof(GetLabRoles), x =>
		{
			return x.Send(getRolesRequest);
		}, false);

		return new GridData<GetLabRolesResponse>
			{
				TotalItems = getRolesResult.Entity.TotalCount,
				Items = getRolesResult.Entity.Items
			};
	}
}

<MudToolBar WrapContent="true" Gutters="false" Class="gap-2 pl-2 border-l-8 border-solid mud-border-primary">
	<MudText Typo="Typo.h5" Class="flex-grow-1">Lab Roles</MudText>
	<div class="d-flex justify-center gap-4 flex-grow-1">
		<MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start"
									AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="justify-center"></MudTextField>
		<MudFab Color="Color.Primary" Size="Size.Medium" StartIcon="@Icons.Material.Filled.Add" Class="flex-shrink-0" />
	</div>
</MudToolBar>

<MudDataGrid @ref="dataGrid"
						 T="GetLabRolesResponse"
						 ServerData="ServerReload"
						 Filterable="false"
						 SortMode="SortMode.None">
	<Columns>
		<PropertyColumn Property="x => x.Id" />
		<PropertyColumn Property="x => x.Name" Title="Name" />
		<PropertyColumn Property="x => x.Description" Title="Description" />
		<PropertyColumn Property="x => x.AutoAssign" Title="Auto Assign">
			<EditTemplate>
					<MudCheckBox @bind-Value="context.Item.AutoAssign" T="bool" Label="Auto assign" />
			</EditTemplate>
		</PropertyColumn>
		<TemplateColumn>
			<CellTemplate>
				<MudIconButton Icon="@Icons.Material.Outlined.Edit" Class="pa-2" />
			</CellTemplate>
		</TemplateColumn>
	</Columns>
	<PagerContent >
		<MudDataGridPager T="GetLabRolesResponse" />
	</PagerContent>
</MudDataGrid>