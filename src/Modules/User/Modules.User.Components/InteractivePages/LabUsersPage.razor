@page "/user-lab/manage/users"
@attribute [LabAuthorize(LabsPermissions.ConfigureSite)]

@code
{
	[Inject]
	public IServiceExecutor<IUIBus> ServiceExecutor { get; set; } = default!;

	private Result<PagedList<GetLabUsersResponse>> getLabUsersResult;
	private Dictionary<Guid, bool> showLabUserDetails = [];
	private GetLabUsers getUsersRequest = new();

	protected override async Task OnInitializedAsync()
	{
		getLabUsersResult = await ServiceExecutor.ExecuteAsync(nameof(GetLabUsers), x =>
		{
			return x.Send(getUsersRequest);
		}, true);
	}

	private void toggleLabUserDetailsHandler(Guid userId)
	{
		if (showLabUserDetails.ContainsKey(userId))
		{
			showLabUserDetails[userId] = !showLabUserDetails[userId];
		}
		else
		{
			showLabUserDetails[userId] = true;
		}
	}
}

<Papper>
	<LoadingTitle Title="Labs Users"
								IsLoading="ServiceExecutor.IsRequestLoading(nameof(GetLabUsers))" />

	@if (getLabUsersResult.IsFailed)
	{
		<ResultError Error="@getLabUsersResult.Error" />
	}

	@if (getLabUsersResult.IsSuccess)
	{
		<div class="overflow-x-auto scroller">
			<table class="table table-pin-cols">
				<thead>
					<tr>
						<th>@nameof(GetLabUsersResponse.LabUserId)</th>
						<th>@nameof(GetLabUsersResponse.DisplayName)</th>
						<th>@nameof(GetLabUsersResponse.EmailVerified)</th>
						<th class="p-0 text-end">
							#
						</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var user in getLabUsersResult.Entity.Items)
					{
						<tr>
							<td>@user.LabUserId</td>
							<td>
								<div class="flex items-center gap-3">
									<div class="avatar">
										<div class="mask mask-squircle h-12 w-12">
											<img src="@user.ProfilePictureUrl"
													 alt="" />
										</div>
									</div>
									<div>
										<div class="font-bold">@user.DisplayName</div>
										<div class="text-sm opacity-50">@user.Email</div>
									</div>
								</div>
							</td>
							<td>@user.EmailVerified</td>
							<th class="p-0">
								<div class="flex justify-end">
									<button class="btn btn-info btn-sm" @onclick="() => toggleLabUserDetailsHandler(user.LabUserId)">
										Details
									</button>
								</div>
							</th>
						</tr>

						if (showLabUserDetails.ContainsKey(user.LabUserId) && showLabUserDetails[user.LabUserId])
						{
							<tr class="bg-base-200">
								<td colspan="4" class="p-0">
									<Papper>
										<h1>...</h1>
									</Papper>
								</td>
							</tr>
						}

						if (getLabUsersResult.Entity.Items.Count == 0)
						{
							<tr>
								<td colspan="3">
									Empty Users.
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	}

</Papper>