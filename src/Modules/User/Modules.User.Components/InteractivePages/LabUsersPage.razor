@page "/user-lab/manage/users"
@attribute [LabAuthorize(LabsPermissions.ConfigureSite)]

@code
{
	[Inject]
	public IServiceExecutor<IUIBus> ServiceExecutor { get; set; } = default!;

	private Result<PagedList<GetLabUsersResponse>> getLabUsersResult;
	private Dictionary<Guid, bool> showLabUserDetails = [];
	private GetLabUsers getUsersRequest = new();
	private MudDataGrid<GetLabUsersResponse>? dataGrid;
	private string? searchString = null;

	private async Task<GridData<GetLabUsersResponse>> ServerReload(GridState<GetLabUsersResponse> state)
	{
		getUsersRequest = new()
		{
			PageNumber = state.Page + 1,
			PageSize = state.PageSize
		};

		getLabUsersResult = await ServiceExecutor.ExecuteAsync(nameof(GetLabUsers), x =>
		{
			return x.Send(getUsersRequest);
		}, false);

		return new GridData<GetLabUsersResponse>
			{
				TotalItems = getLabUsersResult.Entity.TotalCount,
				Items = getLabUsersResult.Entity.Items
			};
	}

	private void toggleLabUserDetailsHandler(Guid userId)
	{
		if (showLabUserDetails.ContainsKey(userId))
		{
			showLabUserDetails[userId] = !showLabUserDetails[userId];
		}
		else
		{
			showLabUserDetails[userId] = true;
		}
	}
}

<MudToolBar WrapContent="true" Gutters="false" Class="gap-2 pl-2 border-l-8 border-solid mud-border-primary">
	<MudText Typo="Typo.h5" Class="flex-grow-1">Lab Users</MudText>
	<div class="d-flex justify-center gap-4 flex-grow-1">
		<MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start"
									AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="justify-center"></MudTextField>
	</div>
</MudToolBar>

<MudDataGrid @ref="dataGrid" T="GetLabUsersResponse" ServerData="ServerReload" Filterable="false" SortMode="SortMode.None">
	<Columns>
		<TemplateColumn Title="User Info">
			<CellTemplate>
				<UserAvatarDetailsView AvatarImage="@context.Item.ProfilePictureUrl"
																																				Email="@context.Item.Email"
																																				UserName="@context.Item.DisplayName" />
			</CellTemplate>
		</TemplateColumn>
		<PropertyColumn Property="x => x.EmailVerified" />
		<PropertyColumn Property="x => x.LabUserId" Title="Lab Id" />
		<PropertyColumn Property="x => x.Auth0UserId" Title="External Id" />
	</Columns>
	<PagerContent>
		<MudDataGridPager T="GetLabUsersResponse"  />
	</PagerContent>
</MudDataGrid>
