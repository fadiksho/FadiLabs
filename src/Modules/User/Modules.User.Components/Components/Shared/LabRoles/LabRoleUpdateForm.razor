@code {
	[CascadingParameter]
	private MudDialogInstance MudDialog { get; set; } = default!;

	[Parameter]
	public required GetLabRolesResponse Role { get; set; }

	[Inject] public required IServiceExecutor<IUIBus> ServiceExecutor { get; set; }
	[Inject] public required UpdateLabRoleValidator UpdateLabRoleValidator { get; set; }

	private Result editRoleResult;
	private UpdateLabRole editRoleRequest = new();
	private MudForm form = default!;

	protected override void OnInitialized()
	{
		editRoleRequest = new UpdateLabRole
			{
				Id = Role.Id,
				Name = Role.Name,
				Description = Role.Description,
			};
	}

	private async Task editRoleHandler()
	{
		editRoleResult = await ServiceExecutor.ExecuteAsync(nameof(UpdateLabRole), x =>
		{
			return x.Send(editRoleRequest);
		});
	}

	private async Task deleteRoleHandler()
	{
		var deleteRoleResult = await ServiceExecutor.ExecuteAsync(nameof(DeleteLabRole), x =>
		{
			return x.Send(new DeleteLabRole(Role.Id));
		});
	}
}

<MudDialog TitleClass="pa-0">
	<TitleContent>
		<MudToolBar WrapContent="true"
								Gutters="false"
								Class="gap-2 pa-2 mud-elevation-2 mud-background">
			<MudText Typo="Typo.h5" Class="flex-grow-1 pl-2 border-l-4 border-solid mud-border-primary">
				Edit @Role.Name
			</MudText>
		</MudToolBar>
	</TitleContent>
	<DialogContent>
		<MudStack>
			<ResultError Error="editRoleResult.Error" OnClear="@(() => { editRoleResult = default; })" />
			<MudForm Model="@editRoleRequest" @ref="@form"
							 Validation="@(UpdateLabRoleValidator.ValidateValue)"
							 ValidationDelay="0">
				<MudStack>
					<MudTextField @bind-Value="editRoleRequest.Name"
												For="@(() => editRoleRequest.Name)"
												Variant="Variant.Outlined"
												Immediate="true"
												Label="Title" />

					<MudTextField @bind-Value="editRoleRequest.Description"
												For="@(() => editRoleRequest.Description)"
												Variant="Variant.Outlined"
												AutoGrow
												Immediate="true"
												Label="Description" />

					<MudCheckBox Label="AutoAssign"
											 @bind-Value="editRoleRequest.AutoAssign"
											 Disabled="true"
											 Color="Color.Primary"></MudCheckBox>

					<MudStack Row="true">
						<MudButton Variant="Variant.Filled" Color="Color.Primary"
											 OnClick="editRoleHandler">
							Save
						</MudButton>
						<MudButton OnClick="() => MudDialog.Cancel()">Cancel</MudButton>
						<MudButton Variant="Variant.Filled" Class="ms-auto" Color="Color.Error" OnClick="deleteRoleHandler">
							Delete
						</MudButton>
					</MudStack>
				</MudStack>
			</MudForm>
		</MudStack>

	</DialogContent>
</MudDialog>

