@code {
	[Parameter]
	public required GetUsersResponse User { get; set; }

	[Inject]
	public IServiceExecutor<IUIBus> ServiceExecutor { get; set; } = default!;

	private Result<PagedList<GetRolePermissionResponse>> getUserPermissionsResult;

	protected override async Task OnInitializedAsync()
	{
		getUserPermissionsResult = await ServiceExecutor.ExecuteAsync(x =>
		{
			return x.Send(new GetUserPermissions{
				UserId = User.UserId
			});
		});
	}
}

<Papper>
	<LoadingTitle Title="@($"Permissions for {User.Name}")"
								IsLoading="@(ServiceExecutor.IsRequestLoading(nameof(GetRolePermission)))" />

	@if (getUserPermissionsResult.IsFailed)
	{
		<ResultError Error="@getUserPermissionsResult.Error" />
	}

	@if (getUserPermissionsResult.IsSuccess)
	{
		<div class="overflow-x-auto scroller">
			<table class="table">
				<thead>
					<tr>
						<th>Name</th>
						<th>Description</th>
						<th>Server Name</th>
						<th>Server Identifier</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var permission in getUserPermissionsResult.Entity.Items)
					{
						<tr>
							<td>@permission.PermissionName</td>
							<td>@permission.Description</td>
							<td>@permission.ResourceServerName</td>
							<td>@permission.ResourceServerIdentifier</td>
						</tr>
					}
					@if (getUserPermissionsResult.Entity.Items.Count == 0)
					{
						<tr>
							<td colspan="4">
								Empty permissions.
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	}
</Papper>

