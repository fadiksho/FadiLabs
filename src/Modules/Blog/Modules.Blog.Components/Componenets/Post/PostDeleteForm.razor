@code {
	[Inject]
	public IServiceExecutor<IUIBus> ServiceExecutor { get; set; } = default!;

	[Inject]
	public NavigationManager NavigationManager { get; set; } = default!;

	[Parameter]
	public Guid PostId { get; set; }

	private Result deletePostResult;

	private async Task HandleValidSubmit()
	{
		deletePostResult =
			await ServiceExecutor.ExecuteAsync(nameof(DeletePostById), x => x.Send(new DeletePostById(PostId)));

		if (deletePostResult.IsSuccess)
		{
			NavigationManager.NavigateTo("/blog");
		}
	}
}

<Papper>
	<LoadingTitle Title="@($"Delete")"
								IsLoading="ServiceExecutor.IsRequestLoading(nameof(DeletePostById))" />

	@if (deletePostResult.IsFailed)
	{
		<ResultError Error="deletePostResult.Error" />
	}
	<div>
		<button class="btn btn-error" @onclick="HandleValidSubmit"
						disabled="@(ServiceExecutor.IsRequestLoading(nameof(DeletePostById)))">
			Delete
		</button>
	</div>
</Papper>

