@code {
	[Inject]
	public required IServiceExecutor<IUIBus> ServiceExecutor { get; set; }

	[Inject]
	public required NavigationManager NavigationManager { get; set; }

	[Parameter]
	public Guid PostId { get; set; }

	private Result deletePostResult;

	private async Task HandleDeletePost()
	{
		deletePostResult =
			await ServiceExecutor.ExecuteAsync(nameof(DeletePostById), x => x.Send(new DeletePostById(PostId)));

		if (deletePostResult.IsSuccess)
		{
			NavigationManager.NavigateTo("/blog");
		}
	}

	private void ClearDeletePostResultError()
	{
		deletePostResult = default;
	}
}

<MudPaper Class="pa-4">
	<MudStack>
		<MudToolBar Dense="true" WrapContent="true" Gutters="false" Class="gap-2 pl-2 border-l-8 border-solid mud-border-primary">
			<MudText Typo="Typo.h5" Class="flex-grow-1">Delete</MudText>
		</MudToolBar>

		<ResultError Error="deletePostResult.Error" OnClear="ClearDeletePostResultError" />

		<MudButton Variant="Variant.Filled"
							 Color="Color.Error" Class="mr-auto"
							 OnClick="HandleDeletePost">
			Delete
		</MudButton>
	</MudStack>
</MudPaper>

