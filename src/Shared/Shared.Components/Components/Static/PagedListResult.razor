@using Modules.Shared.Integration.Models
@typeparam T

@code {
	[Parameter]
	[EditorRequired]
	public required PagedList<T> PagedList { get; set; }

	[Parameter]
	public string PageNumberQueryName { get; set; } = "page";

	[Inject]
	private NavigationManager Navigation { get; set; } = default!;

	private string getNavigationPageLink(int page)
	{
		var linkUri = Navigation.GetUriWithQueryParameter(PageNumberQueryName, page);

		return Navigation.ToBaseRelativePath(linkUri);
	}
}

<nav aria-label="page navigation" class="join justify-end">
	@if (PagedList.HasPreviousPage)
	{
		<NavLink class="join-item btn btn-sm"
						 href="@getNavigationPageLink(PagedList.PageNumber - 1)">
			Previous
		</NavLink>
	}

	<button class="join-item btn btn-disabled btn-sm" type="button">
		Page
		<span class="text-primary">
			<strong>@PagedList.PageNumber</strong>
		</span>
		<span>
			/ @PagedList.TotalPages
		</span>
	</button>

	@if (PagedList.HasNextPage)
	{
		<NavLink class="join-item btn btn-sm"
						 href="@getNavigationPageLink(PagedList.PageNumber + 1)">
			Next
		</NavLink>
	}
</nav>