@using global::Shared.Components.Extensions

@code {
	[Parameter] public int Code { get; set; }
	[Parameter] public string? Path { get; set; }

	[Inject] public required NavigationManager Navigation { get; set; }

	protected override void OnInitialized()
	{
		if(string.IsNullOrWhiteSpace(Path))
		{
			Path = Navigation.ToBaseRelativePath(Navigation.Uri);
		}
		else if (!Uri.IsWellFormedUriString(Path, UriKind.Relative))
		{
			Path = new Uri(Path, UriKind.Absolute).PathAndQuery;
		}

		if (Path[0] != '/')
		{
			Path = $"/{Path}";
		}

		var targetUrl = Path.StartsWith("/labs") == true || RendererInfo.IsInteractive
			? $"/labs/{Code}"
			: $"/{Code}";

		targetUrl = $"{targetUrl}?path={Uri.EscapeDataString(Path)}";

		Navigation.NavigateTo(targetUrl, false, true);
	}
}
