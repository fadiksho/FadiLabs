@inherits LayoutComponentBase
@layout InteractiveBaseLayout

<MudThemeProvider @bind-IsDarkMode="@isDarkMode" Theme="defaultTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
	<MudAppBar Fixed="true"
						 Elevation="2"
						 Dense="@isDenseNavbar"
						 Gutters="false">
		<MudIconButton Icon="@Icons.Material.Filled.Menu"
									 Color="Color.Inherit"
									 Class="rounded-0 align-self-stretch"
									 OnClick="@((e) => DrawerToggle())" />
		<MudText Typo="Typo.h5" Class="ml-3">Fadi Labs</MudText>
		<MudSpacer />
		<MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" />

		<MudProgressLinear Color="Color.Secondary"
											 Style="position:absolute; bottom: 0;background-color: transparent"
											 Size="Size.Small"
											 Indeterminate="@ServiceExecutor.IsLoading" />
	</MudAppBar>

	<MudDrawer @bind-Open="_drawerOpen"
						 ClipMode="DrawerClipMode.Always" Overlay="true"
						 Elevation="2"
						 Variant="DrawerVariant.Responsive"
						 Breakpoint="Breakpoint.Md">
		<div class="flex flex-col h-full gap-4 pb-6">
			<MudPaper Elevation="0" Class="pa-1" Square="true">
				<AuthorizeView>
					<Authorized>
						<div class="d-flex align-center mud-ripple cursor-pointer px-4 py-2"
								 @onclick="ToggleMenu">
							<UserAvatarDetailsView AvatarImage="@context.User.GetProfilePicture()"
																		 UserName="@context.User.GetUserName()"
																		 Email="@context.User.GetEmail()"
																		 class="flex-1" />

							<MudIcon Icon="@(isMenuExpanded ? Icons.Material.Filled.ExpandMore : Icons.Material.Filled.ExpandLess)"
											 Color="Color.Primary"
											 aria-label="account setting" />
						</div>
						<MudCollapse Expanded="@isMenuExpanded">

							@if (RendererInfo.Name == "WebView")
							{
								<MudButton Variant="Variant.Filled" ButtonType="ButtonType.Button" OnClick="Logout">Logout</MudButton>
							}
							else
							{
								<MudNavMenu>
									<MudNavLink Href="account/profile">Profile</MudNavLink>
								</MudNavMenu>

								<MudDivider DividerType="DividerType.Middle" Class="my-1" />

								<form action="account/logout"
											method="post">
									<AntiforgeryToken />
									<button type="submit" class="mud-nav-link mud-ripple">
										<div class="mud-nav-link-text">
											Logout
										</div>
									</button>
								</form>
							}
						</MudCollapse>
					</Authorized>
					<NotAuthorized>
						@if (RendererInfo.Name == "WebView")
						{
							<MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" FullWidth="true" Color="Color.Primary">
								Login
							</MudButton>
						}
						else
						{
							<MudButton Href="account/login" Variant="Variant.Filled" FullWidth="true" Color="Color.Primary">
								Login
							</MudButton>
						}
					</NotAuthorized>
				</AuthorizeView>
			</MudPaper>
			<MudDivider DividerType="DividerType.Middle" Light="true" Class="my-2" />

			<MudNavMenu>
				<MudNavGroup Title="Home Lab" Expanded="true">
					<MudNavLink Href="" Match="NavLinkMatch.All">Home</MudNavLink>
					<MudNavLink Href="/about">About</MudNavLink>
					<MudNavLink Href="/blog" Match="NavLinkMatch.All">Blog</MudNavLink>
					<MudNavLink Href="/labs" Match="NavLinkMatch.All">Labs</MudNavLink>
					<MudNavLink Href="/notfound123">404 Link</MudNavLink>
					<MudNavLink OnClick="ToNotFoundPage">404 Navigation</MudNavLink>
				</MudNavGroup>

				<LabAuthorizeView LabPermissions="LabsPermissions.ConfigureSite">
					<Authorized>
						<MudNavGroup Title="Test Lab" Expanded="false">
							<MudNavLink Href="/labs/current-user">Current User</MudNavLink>
							<MudNavLink Href="/labs/test">Test</MudNavLink>
							<MudNavLink Href="/labs/test2">Test 2</MudNavLink>
						</MudNavGroup>

						<MudNavGroup Title="Blog Lab" Expanded="true">
							<MudNavLink Href="/labs/blog-lab" Match="NavLinkMatch.All">Blog</MudNavLink>
							<MudNavLink Href="/labs/blog-lab/new">Create New</MudNavLink>
						</MudNavGroup>

						<MudNavGroup Title="User Lab" Expanded="true">
							<MudNavLink Href="/labs/user-lab/manage/users">Lab Users</MudNavLink>
							<MudNavLink Href="/labs/user-lab/manage/roles">Lab Roles</MudNavLink>
							<MudNavLink Href="/labs/user-lab/manage/roles-permissions">Lab Roles Permissions</MudNavLink>
						</MudNavGroup>

						<MudNavGroup Title="Auth0 Lab" Expanded="false">
							<MudNavLink Href="/labs/auth0-lab/manage/permissions">Auth0 Permissions</MudNavLink>
						</MudNavGroup>
					</Authorized>
				</LabAuthorizeView>
			</MudNavMenu>

			<MudDivider DividerType="DividerType.Middle" Light="true" Class="my-2" />

			<MudList T="string">
				<MudListItem Text="Site Settings" Expanded="true">
					<NestedList>
						<MudListItem OnClick="ToggleTheme" Dense="true">
							<MudStack Row="true" StretchItems="StretchItems.End" AlignItems="AlignItems.Center">
								<MudToggleIconButton @bind-Toggled="isDarkMode"
																		 Icon="@Icons.Material.Filled.LightMode"
																		 ToggledIcon="@Icons.Material.Filled.DarkMode"
																		 ToggledColor="@Color.Primary"
																		 Class="pa-0" />
								<MudText Class="mud-nav-link-text">
									Toggle theme
								</MudText>
							</MudStack>
						</MudListItem>
						<MudListItem OnClick="ToggleDenseNavbar" Dense="true">
							<MudStack Row="true" StretchItems="StretchItems.End" AlignItems="AlignItems.Center">
								<MudToggleIconButton @bind-Toggled="isDenseNavbar"
																		 Class="pa-0"
																		 Icon="@Icons.Material.Filled.CheckBoxOutlineBlank"
																		 ToggledIcon="@Icons.Material.Filled.CheckBox"
																		 ToggledColor="@Color.Primary" />

								<MudText Class="mud-nav-link-text">
									Dinsed navbar
								</MudText>
							</MudStack>
						</MudListItem>
					</NestedList>
				</MudListItem>
			</MudList>
		</div>
	</MudDrawer>

	<MudMainContent Class="d-flex flex-column overflow-hidden" Style="height:100vh;">
		<div class="flex-1 overflow-auto">
			<ErrorBoundary @ref="errorBoundary">
				<ChildContent>
					@Body
				</ChildContent>
				<ErrorContent>
					<MudAlert Severity="Severity.Error">
						😈 A rotten gremlin got us. Sorry!
					</MudAlert>
				</ErrorContent>
			</ErrorBoundary>
		</div>
		<footer class="d-inline-flex justify-center">
			<MudText Typo="Typo.caption">
				© 2024 Fadi Ksho | Built with <MudText Color="Color.Error" Typo="Typo.caption">❤</MudText> using .NET @Environment.Version.Major & Blazor
			</MudText>
		</footer>
	</MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
	An unhandled error has occurred.
	<a href="" class="reload">Reload</a>
	<a class="dismiss">🗙</a>
</div>

@code {
	[Inject] public required NavigationManager Navigation { get; set; }
	[Inject] public required IAuthService AuthService { get; set; }
	[Inject] public required IServiceExecutor<IUIBus> ServiceExecutor { get; set; }

	private bool _drawerOpen = true;
	private bool isMenuExpanded = false;
	private bool isDarkMode = true;
	private bool isDenseNavbar = false;
	private ErrorBoundary? errorBoundary;

	private MudTheme defaultTheme = new()
		{
			PaletteDark = new PaletteDark
			{
				Primary = "8b5cf6",
				Secondary = "ff66b2",
			},
			PaletteLight = new PaletteLight
			{
				Primary = "8b5cf6",
				Secondary = "ff66b2",
				AppbarBackground = "5b21b6"
			},
			LayoutProperties = new LayoutProperties
			{
				DefaultBorderRadius = "0"
			}
		};

	protected override void OnParametersSet()
	{
		errorBoundary?.Recover();
	}

	private void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}

	async Task Login()
	{
		await AuthService.AuthenticateAsync();
	}

	async void Logout()
	{
		await AuthService.DeAuthenticateAsync();
	}

	void ToggleMenu()
	{
		isMenuExpanded = !isMenuExpanded;
	}

	void ToggleTheme()
	{
		isDarkMode = !isDarkMode;
	}

	void ToggleDenseNavbar()
	{
		isDenseNavbar = !isDenseNavbar;
	}

	void ToNotFoundPage()
	{
		Navigation.NavigateTo("/nofoundpage");
	}
}
